TODO
==========================

* Save relative paths to the project not absolute
* Export a sequence of images given an animation, a destination folder, a target FPS and a viewport (could be automatic calculated from the boundings of the skeleton)
	- automatic viewport
	- fixed viewport

* Skin patches are saved only with ids of the joints and the skeleton is a parameter of the update() method of the Skin and SkinPatch.
* Used images are saved as a property of the project or something like that, declaring resources when the project is loaded, which will later be used by the skin patches, not sure how yet.

* Import a list of images to the images panel to be used to easily edit the skin of each Joint.
* Zoom with ctrl + mouse wheel (and possibly a gui component)
* Undo with ctrl + z
* Edit menu with all the stuff with Copy/Paste/Undo/Etc.
* Cut/Copy part of the skeleton and paste it as child of another Skeleton Joint.

* Specify the duration of a keyframe of the current animation
* Panel with a list of animations to switch between animations
* BUG: be able to resize the viewport when the application is resized
* BUG: cant select a node from the JTree when we are modifying a Skin
* Title bar shows the current project (updated when open or save as...)
* Perform exit when EXIT button touched
* Dialog when exit the application if project was modified since the last modification
* Dialog when opening a new project the application if project was modified since the last modification
* Application configuration in the user home or something like that
	- recent projects
	- last opened folders for each operation

* Tooltips over each button of the GUI
* Toggle buttons to enable different render stuff (joints, skins, joint axis for inner coordinate system, etc)
* Keyframes stores only changes from the previous state, to be able to animate multiple animations and to be able to move parents and the animations continue the same (for example, an animaiton of only the left arm)
* Status bar shows current editor state (modifying the SKin, etc etc etc)
* New Project
* Change keyframes order
* Control to get a frame between two keyframes (possibly a timeline)
* Joint restrictions, 
	- distance between two joints (min, max)

* More options when playing the animation (how many loops, if should play in reverse, the animation speed, etc)

* Investigate about using Box2d to edit the skeleton and joints.

* draw current joint axis to see the current roation, etc

* should we use libgdx to render? or just use Java awt canvas?

Quick Concepts structure:

Project
  -> Images used for the skinning 
  -> Skeleton
  -> Skin
     -> SkinPatch
  -> Animations
     -> KeyFrames

DONE
==========================

* A lot of stuff
* Exit button shows an exit dialog and let the user exit the application
* animation keyframes stores float[] for each joint instead a skeleton, to be easily serialized/deserialized
* Save the list of project animations to a json file projectname.animations when saving the project
* Load the list of saved animations when loading the project as well from the projectname.animations file
* Save button saves the current project if there is one, show save as otherwise.

